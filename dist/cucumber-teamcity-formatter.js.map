{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap 05a97860105a7a8b62e3","/Users/davidchandler/code/cucumber-teamcity-formatter/src/cucumber-teamcity-formatter.js","external \"cucumber\"","external \"cucumber/lib/formatter/get_color_fns\""],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_cucumber","TeamCityFormatter","Formatter","constructor","options","super","assign","colorFns","_get_color_fns2","default","eventBroadcaster","on","logTestCaseStarted","bind","logTestCaseFinished","getCaseIndexInfo","sourceLocation","gherkinDocument","totalCases","feature","children","length","caseIndex","findIndex","child","location","line","pickle","eventDataCollector","getTestCaseData","log","escape","testCase","result","status","duration","Status","AMBIGUOUS","FAILED","details","formatterHelpers","formatIssue","number","snippetBuilder","text","replace","require"],"mappings":"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","file":"cucumber-teamcity-formatter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TeamCityFormatter\"] = factory();\n\telse\n\t\troot[\"TeamCityFormatter\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 05a97860105a7a8b62e3","import { Formatter, Status, formatterHelpers } from 'cucumber';\nimport getColorFns from 'cucumber/lib/formatter/get_color_fns';\n\nexport default class TeamCityFormatter extends Formatter {\n    constructor(options) {\n        // turn off colours in formatted errors.\n        super(Object.assign(options, { colorFns: getColorFns(false) }));\n\n        options.eventBroadcaster\n            .on('test-case-started', ::this.logTestCaseStarted)\n            .on('test-case-finished', ::this.logTestCaseFinished);\n    }\n\n    getCaseIndexInfo({ sourceLocation, gherkinDocument }) {\n        const totalCases = gherkinDocument.feature.children.length;\n        const caseIndex = gherkinDocument.feature.children.findIndex(\n            child => child.location.line === sourceLocation.line\n        );\n\n        return { totalCases, caseIndex };\n    }\n\n    logTestCaseStarted({ sourceLocation }) {\n        const { gherkinDocument, pickle } = this.eventDataCollector.getTestCaseData(sourceLocation);\n\n        const { caseIndex } = this.getCaseIndexInfo({ sourceLocation, gherkinDocument });\n\n        if (caseIndex === 0) {\n            this.log(`##teamcity[testSuiteStarted name='${this.escape(gherkinDocument.feature.name)}']\\n`);\n        }\n\n        this.log(\n            `##teamcity[testStarted name='${this.escape(pickle.name)}' captureStandardOutput='true']\\n`\n        );\n    }\n\n    logTestCaseFinished({ sourceLocation }) {\n        const {\n            gherkinDocument,\n            pickle,\n            testCase,\n            testCase: { result: { status, duration } }\n        } = this.eventDataCollector.getTestCaseData(sourceLocation);\n\n        if (status === Status.AMBIGUOUS || status === Status.FAILED) {\n            const details = formatterHelpers.formatIssue({\n                colorFns: this.colorFns,\n                gherkinDocument,\n                number: 1,\n                pickle,\n                snippetBuilder: this.snippetBuilder,\n                testCase\n            });\n\n            this.log(\n                `##teamcity[testFailed name='${this.escape(pickle.name)}' message='${this.escape(\n                    `${pickle.name} FAILED`\n                )}' details='${this.escape(details)}']\\n`\n            );\n        }\n\n        this.log(`##teamcity[testFinished name='${this.escape(pickle.name)}' duration='${duration}']\\n`);\n\n        const { totalCases, caseIndex } = this.getCaseIndexInfo({ sourceLocation, gherkinDocument });\n\n        if (caseIndex === totalCases - 1) {\n            this.log(`##teamcity[testSuiteFinished name='${this.escape(gherkinDocument.feature.name)}']\\n`);\n        }\n    }\n\n    escape(text) {\n        return text\n            .replace(/\\|/g, '||')\n            .replace(/'/g, '|\\'')\n            .replace(/\\n/g, '|n')\n            .replace(/\\r/g, '|r')\n            .replace(/\\[/g, '|[')\n            .replace(/\\]/g, '|]');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cucumber-teamcity-formatter.js","module.exports = require(\"cucumber\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cucumber\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"cucumber/lib/formatter/get_color_fns\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cucumber/lib/formatter/get_color_fns\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}